#!/usr/bin/env node
"use strict";function e(e){if(e&&e.__esModule)return e;var s={};return e&&Object.keys(e).forEach((function(t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(s,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})})),s.default=e,s}var s,t=require("fs"),o=require("path"),r=require("readline"),i=(s=require("yargs"))&&"object"==typeof s&&"default"in s?s.default:s;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function n(e,s,t,o){return new(t||(t=Promise))((function(r,i){function n(e){try{c(o.next(e))}catch(e){i(e)}}function l(e){try{c(o.throw(e))}catch(e){i(e)}}function c(e){var s;e.done?r(e.value):(s=e.value,s instanceof t?s:new t((function(e){e(s)}))).then(n,l)}c((o=o.apply(e,s||[])).next())}))}function l(e,s,r){s||(s=o.resolve()),r||(r=[]);const i=t.readdirSync(s);for(const n of i){const i=o.join(s,n);t.lstatSync(i).isDirectory()&&l(e,i,r),e instanceof RegExp?e.test(i)&&r.push(i):i.includes(e)&&r.push(i)}return r}class c{constructor(e,s,t,o){this.pargs=e,this.files=s,this.folders=t,this.logger=o,this.langIdIconsCount=0,this.unsupported=[],this.fileNames=this.getFilesCollection(),this.folderNames=this.getFoldersCollection()}generate(){const e=process.cwd();if(this.createDirectory("examples"),this.logger.log(""),"files"===this.pargs.flag){const e=this.pargs.icons.length?this.pargs.icons:Object.keys(this.fileNames);this.buildFiles(e)}if("folders"===this.pargs.flag){const e=this.pargs.icons.length?this.pargs.icons:Object.keys(this.folderNames);this.buildFolders(e)}"all"===this.pargs.flag&&(this.buildFolders(Object.keys(this.folderNames)),this.buildFiles(Object.keys(this.fileNames))),this.displayNoteFooter(),process.chdir(e)}displayNoteFooter(){const e=this.pargs.icons.filter(e=>!this.unsupported.includes(e));let s=!e.length||e.length>1,t=s?"s":"";const o="all"!==this.pargs.flag?this.pargs.flag.substring(0,this.pargs.flag.length-1):this.pargs.flag;let r=s?"were":"was";const i=this.pargs.icons.length?`${e.length?`'${e.join("', '")}'`:"zero"} ${o}`:o;if(this.logger.updateLog(`Example${t} of ${i} icon${t} ${r} successfully created!`),this.unsupported.length&&(s=!this.unsupported.length||this.unsupported.length>1,t=s?"s":"",this.logger.error(`Unsupported icon${t}: '${this.unsupported.join("', '")}'`)),this.langIdIconsCount>0){s=this.langIdIconsCount>1,t=s?"s":"",r=s?"are":"is";const e=`\nNote: Example${t} include${s?"":"s"} file icon${t} that ${r} supported via 'language id'.\n  In order to display that icon${t}, you may have to add the following snippet in your settings:\n\n  "vsicons.associations.files": [\n    { "icon": "%ICON-NAME%", "extensions":["%FILE-EXTENSION%"], "format": "%ICON-FILE-FORMAT%" }\n  ]\n\n  replacing the placeholders accordingly. For more than one icon, add their respective entries in the array.`;this.logger.log(e)}}getFilesCollection(){return this.files.supported.filter(e=>!e.disabled).reduce((e,s)=>{const t=e,o=!s.filename&&s.languages&&s.languages.length?s.languages[0].defaultExtension:s.extensions[0];return o?(t[s.icon]=`${s.filename?"":"file."}${o}`,t):t},{})}getFoldersCollection(){return this.folders.supported.filter(e=>!e.disabled).reduce((e,s)=>{const t=e;return s.extensions.length&&(t[s.icon]=s.extensions[0]),t},{})}createDirectory(e){!function e(s){t.existsSync(s)&&(t.readdirSync(s).forEach(o=>{const r=`${s}/${o}`;t.lstatSync(r).isDirectory()?e(r):t.unlinkSync(r)}),t.rmdirSync(s))}(e),t.mkdirSync(e),process.chdir(e)}buildFiles(e){e.forEach(e=>{const s=this.fileNames[e];if(!s)return void this.unsupported.push(e);const o=this.files.supported.find(s=>s.icon===e);o.languages&&o.languages.length&&this.langIdIconsCount++;try{t.writeFileSync(s,null),this.logger.updateLog(`Example file for '${e}' successfully created!`)}catch(s){const t=s;this.logger.error(`Something went wrong while creating the file for '${e}' :\n${(null==t?void 0:t.stack)||(null==t?void 0:t.message)}`)}})}buildFolders(e){e.forEach(e=>{const s=this.folderNames[e];if(s)try{t.mkdirSync(s),this.logger.updateLog(`Example folder for '${e}' successfully created!`)}catch(s){const t=s;this.logger.error(`Something went wrong while creating the folder for '${e}' :\n${(null==t?void 0:t.stack)||(null==t?void 0:t.message)}`)}else this.unsupported.push(e)})}}class a{constructor(){this.frames=["- ","\\ ","| ","/ "],this.countLines=1}log(e,s){process.stdout.write(`${this.getHeader(s)}${e}\n`),this.countLines++}error(e,s){process.stderr.write(`${this.getHeader(s)}${e}\n`),this.countLines++}updateLog(e,s){process.stdout.isTTY?(s||(s=1),r.moveCursor(process.stdout,0,-s),r.clearLine(process.stdout,0),process.stdout.write(e+"\n"),r.moveCursor(process.stdout,0,s)):process.stdout.write(e+"\n")}spinnerLogStart(e,s){const t=this.countLines;return this.log(e,s),{timer:this.spin(e,s,t),line:t}}spinnerLogStop(e,s,t){clearInterval(e.timer),this.updateLog(`${this.getHeader(t)}${s}`,this.countLines-e.line),this.cursorShow()}spin(e,s,t){if(!process.stdout.isTTY)return;let o=0;return setInterval(()=>{this.cursorHide();const r=this.frames[o=++o%this.frames.length];this.updateLog(`${this.getHeader(s)}${r}${e}`,this.countLines-t)},80)}cursorShow(){process.stdout.write("[?25h")}cursorHide(){process.stdout.write("[?25l")}getHeader(e){return e?`[${e}]: `:""}}class h{constructor(e){this.logger=e,this.supportedFlags=["--all","--files","--folders"];const s={all:{description:"Generates examples for all icons",type:"boolean"},files:{description:"Generates examples for all file icons",type:"boolean"},folders:{description:"Generates examples for all folder icons",type:"boolean"}};this.optionKeys=Object.keys(s);i.usage("Usage: $0 <flag> [space separated icon names]").options(s).group(this.optionKeys,"Flags:").alias("help","h").alias("version","V").epilogue("Providing the icon names after '--files' or '--folders',\nrestricts the examples generator to that icons only").check(e=>this.validate(e)).strict()}parse(){const e=i.argv;return{flag:this.getFlag(e),icons:e._}}validate(e){return e.all||e.files||e.folders||this.errorHandler("Missing flag argument"),this.supportedFlags.includes(process.argv[2])||this.errorHandler("Incorrect flag position"),this.confict(e,this.optionKeys[0],this.optionKeys[1]),this.confict(e,this.optionKeys[1],this.optionKeys[2]),this.confict(e,this.optionKeys[2],this.optionKeys[0]),e.all&&e._.length&&this.logger.log("Arguments after '--all' have been ignored\n"),!0}confict(e,s,t){e[s]&&e[t]&&this.errorHandler(`Flags '--${s}' and '--${t}' are mutually exclusive`)}errorHandler(e){i.showHelp(),this.logger.error(e),process.exit(1)}getFlag(e){return e.all?this.optionKeys[0]:e.files?this.optionKeys[1]:this.optionKeys[2]}}!function(){n(this,void 0,void 0,(function*(){try{const s=new a,r=new h(s).parse(),i=function(e){let s=o.resolve();const r=o.parse(s).root;let i=!0;for(;i;){let n;try{t.accessSync(o.resolve(s,e)),n=e}catch(e){n=void 0}if(n)return i=!1,o.join(s,n);if(s===r)return i=!1,null;s=o.dirname(s)}}("vscode-icons");if(!i)throw Error("Directory 'vscode-icons' could not be found, try cloning the repository first, in the parent directory.");const n="src(?:(?:\\/|\\\\)[a-zA-Z0-9\\s_@-^!#$%&+={}\\[\\]]+)*(?:\\/|\\\\)",u=l(new RegExp(n+"supportedExtensions\\.js"),i)[0],d=l(new RegExp(n+"supportedFolders\\.js"),i)[0];if(!u||!d)throw Error("Looks like 'vscode-icons' has not been build yet, try performing a build first.");const g=(yield Promise.resolve().then((function(){return e(require(u))}))).extensions,p=(yield Promise.resolve().then((function(){return e(require(d))}))).extensions;new c(r,g,p,s).generate()}catch(e){const s=e;console.error((null==s?void 0:s.message)||(null==s?void 0:s.stack)),process.exit(1)}}))}();
